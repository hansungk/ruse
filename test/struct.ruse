// fail

struct S {
    hi: int
}

func (s: int) wrong() -> int { //~error: cannot declare a method for 'int' which is not a struct
}

func (s: *S) get_hi() -> int {
    return s.hi
}

func (p: *S) by_ptr_method() -> int {
    return s.hi //~error: undeclared identifier 's'
    return p.hi
}

func (s: S) get_hi() -> int { //~error: redefinition of 'get_hi' inside struct S
}

func main() {
    var not_a_struct: int
    not_a_struct.lol //~error: type 'int' is not a struct

    var a: S
    a.lol //~error: 'lol' is not a member of struct 'S'

    S {.hi = 0}
    S {.notthere = 0} //~error: 'notthere' is not a member of struct 'S'

    let def = S {.hi = 0}
    let hi = def.get_hi()
    hi + 1

    {
        struct Inner {
            a: int
        }
        Inner {.a = 3}
        Inner {.a = S {.hi = 0}} //~error: cannot assign 'S' type to 'int'
    }
    Inner {.a = 3} //~error: undeclared identifier 'Inner'
}
