struct Token {
    pos: int
    text: string
}

// func parse() {
//     Token {.pos} // ERROR: expected '='
//     Token {.pos = } // ERROR: expected an expression
//     Token {.pos 3} // ERROR: expected '='
//     Token {.pos = 3, .text = "hi"}

//     Token {pos} // ERROR: expected '='

//     if Token {.pos = 3} {
//     } else {
//     }

//     // if Token {} {
//     // } else {
//     // }

//     struct Inner {
//         a: int
//     }
// }

func sema() {
    Token {.notthere = 0} // ERROR: 'notthere' is not a member of 'Token'
    Token {.pos = "3"} // ERROR: cannot assign 'string' .* 'int'
    var tok = Token {.pos = 3, .text = "hi"}
    tok = "s" // ERROR: cannot assign 'string' .* 'Token'

    struct Inner {
        a: int
    }

    let inner: Inner
    inner.a
}
